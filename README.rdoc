= state_machine_history
state_machine_history is an extension of the state_machine[https://github.com/pluginaweek/state_machine] gem,
that logs all transitions from the one state to another state.

== Install
  gem install state_machine_history

=== For Rails version < 3
In environment.rb:
  Rails::Initializer.run do |config|
    ...
    config.gem 'state_machine_history'
    ...
  end
Generate the migration:
  script/generate state_machine_history_2 create_machine_history
Run the migration
  rake db:migrate

=== For Rails version >=3
In Gemfile
  gem 'state_machine_history'
Generate the migration:
  rails generate state_machine_history create_machine_history
Run the migration
  rake db:migrate

== Usage
This gem adds logging function to the state_machine gem.
Below is an example of the features offered:

=== Class definition

  class Order
    state_machine :initial => :not_selected do
      # Function that add logger function to the state machine
      track_history

      event :choose do
        transition :not_selected => :selected
      end
      event :add_to_basket do
        transition :selected => :in_basket
      end
      event :pay do
        transition :in_basket => :paid
      end
      event :to_send do
        transition :paid => :sent
      end
    end
  end

=== Using extensions

  order = Order.new
  # After this transition logger function adds to the machine_logs
  # table in the database new data.
  order.choose
  #Function determines the object is located or no at the not_selected
  # state before 'selected' state.
  order.was_there?(:not_selected, :selected) #=> true
  # The same as the previous example. In this example second argument of function is current state
  order.was_there?(:not_selected)  #=> true

== Credits

=== Project Team
* Mykhaylo Sorochan - Project Manager
* Dmitriy Landberg - Software Developer
* Nataliya Shatokhina - Tester
* Sergey Mostovoy - Extension idea

Copyright (c) 2010 {Sphere Consulting Inc.}[http://www.sphereinc.com], released under the MIT license (see LICENSE).
